# You are free to convert this into a helm chart if you wish. In fact, that's
# what I did in the first iteration of this template but later decided to
# simplify it for those that are not familiar with Helm.
# Old style: https://github.com/relaxdiego/python-based-operator/tree/cd0fd5076226cb5aebb548d0160e791ea3046fdb/charts
---
apiVersion: v1
kind: Namespace
metadata:
  name: python-based-operator
  labels:
    name: python-based-operator
---
# References
# 1. Guide:
#    https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/
#
# 2. API Reference:
#    https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#customresourcedefinition-v1-apiextensions-k8s-io
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: prometheusclusters.relaxdiego.com
  labels:
    relaxdiego.com: python-based-operator
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: relaxdiego.com
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: prometheusclusters
    # singular name to be used as an alias on the CLI and for display
    singular: prometheuscluster
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: PrometheusCluster
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - proms
    - promcluster
    - promclusters
    - prometheuses
    - prometheis
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1alpha1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # Indicates whether this version should be used when persisting custom
      # resources to storage. One and only one version must be marked as
      # the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          required:
            - spec
          properties:
            # This is just a JSON Schema spec. Not too comfy with JSON Schemas?
            # Here's a starter: https://json-schema.org/learn/getting-started-step-by-step.html
            spec:
              type: object
              properties:
                config:
                  type: string
                  default: |
                    # Reference: https://prometheus.io/docs/prometheus/latest/configuration/configuration/
                    scrape_configs:
                      - job_name: 'prometheus'
                        static_configs:
                        - targets: ['localhost:9090']
                  description: Raw prometheus configuration file contents. See the official
                               Prometheus documentation at https://prometheus.io/docs/prometheus/latest/configuration/configuration
                replicas:
                  type: integer
                  default: 1
                  minimum: 1
                  description: The desired number of running pods
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: python-based-operator-serviceaccount
  namespace: python-based-operator
  labels:
    relaxdiego.com: python-based-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: python-based-operator-clusterrole
  labels:
    relaxdiego.com: python-based-operator
rules:
  - apiGroups: [""]
    resources: ["configmaps", "services"]
    verbs: ["get", "create", "delete"]

    # This operator uses secrets to manage app release information
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["list", "get", "create", "update", "patch", "delete"]

  - apiGroups: ["apps"]
    resources: ["statefulsets"]
    verbs: ["get", "create", "patch", "delete"]

  - apiGroups: ["relaxdiego.com"]
    resources: ["prometheusclusters"]
    verbs: ["watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: python-based-operator-clusterrolebinding
  labels:
    relaxdiego.com: python-based-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: python-based-operator-clusterrole
subjects:
- kind: ServiceAccount
  name: python-based-operator-serviceaccount
  namespace: python-based-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-based-operator
  namespace: python-based-operator
  labels:
    relaxdiego.com: python-based-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: python-based-operator
  template:
    metadata:
      namespace: python-based-operator
      labels:
        app.kubernetes.io/name: python-based-operator
    spec:
      serviceAccountName: python-based-operator-serviceaccount
      containers:
        - name: python-based-operator
          image: "{{IMAGE_TAG}}:latest"
          imagePullPolicy: Always
